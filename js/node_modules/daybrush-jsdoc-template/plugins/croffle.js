const path = require("path");


exports.defineTags = function(dictionary) {
    const env = require('jsdoc/env');

    function tagged(doclet, property, tag) {
        const croffle = env.conf.croffle;
        const value = (tag.value || tag.text || "").trim();
        const croffleFile = path.resolve(doclet.meta.path, value);
        const info = path.parse(croffleFile);
        const storyDir = info.dir;

        property.reactCroffleFilee = croffleFile;

        if (croffle) {
            Object.entries(croffle).map(([framework, file]) => {
                let frameworkFile = file;
                Object.entries(info).forEach(([infoName, infoValue]) => {
                    frameworkFile = frameworkFile.replace(new RegExp(`\\{${infoName}\\}`, "g"), infoValue);
                });
                property[`${framework}CroffleFile`] = path.resolve(storyDir, frameworkFile);
            });
        }
    }
    dictionary.defineTag("croffle", {
        onPropertyTagged: tagged,
        onTagged: function(doclet, tag) {
            tagged(doclet, doclet, tag);
        }
    });
};
