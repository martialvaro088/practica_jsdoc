<?js
    var data = obj;
    var props = data.subprops || data.properties;

    /* sort subprops under their parent props (like opts.classname) */
    var parentProp = null;
    props.forEach(function(prop, i) {
        if (!prop) { return; }
        if ( parentProp && prop.name && prop.name.indexOf(parentProp.name + '.') === 0 ) {
            prop.name = prop.name.substr(parentProp.name.length+1);
            parentProp.subprops = parentProp.subprops || [];
            parentProp.subprops.push(prop);
            props[i] = null;
        }
        else {
            parentProp = prop;
        }
    });

    /* determine if we need extra columns, "attributes" and "default" */
    props.hasAttributes = false;
    props.hasDefault = false;
    props.hasName = false;

    props.forEach(function(prop) {
        if (!prop) { return; }

        if (prop.nullable) {
            props.hasAttributes = true;
        }

        if (prop.name) {
            props.hasName = true;
        }

        if (typeof prop.defaultvalue !== 'undefined' && !data.isEnum) {
            props.hasDefault = true;
        }
    });
?>

<?js
    var self = this;
    props.forEach(function(prop) {
        if (!prop || prop.access === "private") { return; }
?>
    <div id="<?js= data.id ?>-<?js=prop.name?>" class="<?js= prop.deprecated ? "deprecated db-prop" : "db-prop"?>">
        <?js if (props.hasName) {?>
            <div class="db-div db-name">
                <a href="#<?js= data.id ?>-<?js=prop.name?>"><?js= prop.name ?></a>
                <?js if (prop.optional) { ?><span class="db-optional">optional</span><?js } ?>
                <?js if (prop.nullable) { ?><span class="db-optional">nullable</span><?js } ?>
            </div>
        <?js } ?>

        <?js if (typeof prop.since !== 'undefined') { ?>
            <div class="db-div db-since">
                Since: <?js if(env.conf?.docdash?.repo) {?>
                    <a href="https://github.com/<?js=env.conf.docdash.repo?>/releases/tag/<?js= prop.since ?>" target="_blank"><?js= prop.since ?></a>
                <?js } else { ?>
                    <?js= prop.since ?>
                <?js } ?>
            </div>
        <?js } ?>
        <?js if (prop.story) { ?>
            <div class="db-div db-story">
                Story Example: <a href="<?js= prop.story.url ?>" target="_blank"><?js= prop.story.title ?></a>
            </div>
        <?js } ?>

        <?js if (typeof prop.defaultvalue !== 'undefined') { ?>
            <div class="db-div db-default">
                Default Value: <?js= self.htmlsafe(prop.defaultvalue) ?>
            </div>
        <?js } ?>

        <div class="db-div db-type">
            <?js if (prop.type && prop.type.names) {?>
                <?js= prop.name ?><?js=prop.optional ? "?" :""?>: <?js= self.partial('type.tmpl', prop.type.names) ?>
            <?js } ?>
        </div>


        <div class="db-div db-description">
            <?js= prop.description ?><?js if (prop.subprops) { ?>
                <h6>Properties</h6><?js= self.partial('properties.tmpl', prop) ?>
            <?js } ?>
        </div>
        <?js if (prop.example) { ?>
            <h7 class="db-examples-header">Examples</h7>
            <div class="db-div db-examples">
                <?js= self.partial('examples.tmpl', [{
                    code: prop.example.trim(),
                }]) ?>
            </div>
        <?js } ?>
        <?js if (prop.see) { ?>
            <div class="db-div db-see">
                <p class="db-subtitle">Refer to:</p>
                <ul>
                    <?js prop.see.forEach(function (link) { ?>
                        <li class="db-link"><?js=link ?></li>
                    <?js }); ?>
                </ul>
            </div>
        <?js } ?>
    </div>
<?js }); ?>
